<?xml version="1.0" encoding="UTF-8"?>

<!--
    _________        _____ __________________        _____
    __  ____/___________(_)______  /__  ____/______ ____(_)_______
    _  / __  __  ___/__  / _  __  / _  / __  _  __ `/__  / __  __ \
    / /_/ /  _  /    _  /  / /_/ /  / /_/ /  / /_/ / _  /  _  / / /
    \____/   /_/     /_/   \_,__/   \____/   \__,_/  /_/   /_/ /_/

    @xml.file.header
    Version: @xml.file.version
-->

<!--
    GridGain Spring configuration file to startup grid cache.

    When starting a standalone GridGain node, you need to execute the following command:
    {GRIDGAIN_HOME}/bin/ggstart.{bat|sh} path-to-this-file/spring-cache.xml

    When starting GridGain from Java IDE, pass path to this file into GridFactory:
    GridFactory.start("path-to-this-file/spring-benchmark.xml");
-->
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xsi:schemaLocation="
        http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
    <!--
        Optional description.
    -->
    <description>
        Spring file for grid configuration with benchmark.
    </description>

    <!--
        Configuration below demonstrates how to setup a collision and failover SPI's
        to enable work stealing from overloaded nodes to underloaded nodes.

        Note that for job stealing to work, you must always use both,
        GridJobStealingCollisionSpi and GridJobStealingFailoverSPI.
    -->
    <bean id="grid.cfg" class="org.gridgain.grid.GridConfigurationAdapter" scope="singleton">
        <property name="deploymentMode" value="SHARED"/>

        <!-- Set to local host address just for examples. -->
        <property name="localHost" value="127.0.0.1"/>

        <!--
            Allow indexing SPI to index primitive values.
        -->
        <property name="indexingSpi">
            <list>
                <bean class="org.gridgain.grid.spi.indexing.h2.GridH2IndexingSpi">
                    <property name="defaultIndexPrimitiveKey" value="true"/>
                </bean>
            </list>
        </property>

        <property name="cacheConfiguration">
            <!--
                Specify list of cache configurations here. Any property from
                GridCacheConfiguration interface can be configured here.
                Note that absolutely all configuration properties are optional.
            -->
            <list>
                <!--
                    Partitioned cache example configuration.
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfigurationAdapter">
                    <property name="cacheMode" value="PARTITIONED"/>

                    <!-- Initial cache size (just to avoid internal resizing). -->
                    <property name="startSize" value="700000"/>

                    <!--
                        Setting this to true will cause local node to wait for remote commits.
                        However, it's important to set it to true in the examples as we assert on
                        conditions that usually assume full completion of transactions on all nodes.
                    -->
                    <property name="synchronousCommit" value="false"/>

                    <!--
                        Optional eviction policy (GridCacheLirsEvictionPolicy is used by default).
                    -->
                    <property name="evictionPolicy">
                        <bean class="org.gridgain.grid.cache.eviction.never.GridCacheNeverEvictionPolicy"/>
                        <!--<bean class="org.gridgain.grid.cache.eviction.lru.GridCacheLruEvictionPolicy">-->
                            <!--<property name="maxSize" value="1024"/>-->
                        <!--</bean>-->
                    </property>

                    <!--
                        This shows how to configure number of backups. The below configuration
                        sets the number of backups to 0 .
                    -->
                    <property name="affinity">
                        <bean class="org.gridgain.grid.cache.affinity.partitioned.GridCachePartitionedAffinity">
                            <!--
                                You can change this value to 0 as
                                we don't really need backups for this example.
                            -->
                            <property name="keyBackups" value="1"/>
                        </bean>
                    </property>

                    <!--
                        Set default transaction concurrency and isolation.
                    -->
                    <property name="defaultTxConcurrency" value="PESSIMISTIC"/>
                    <property name="defaultTxIsolation" value="REPEATABLE_READ"/>

                    <!-- Disable near cache as we don't need it for this example. -->
                    <property name="evictionEnabled" value="false"/>
                    <property name="nearEnabled" value="false"/>

                    <!-- Delay preloading by default. -->
                    <property name="preloadPartitionedDelay" value="-1"/>
                </bean>
            </list>
        </property>

        <!--
            Configure pools.

            If data loader is configured with significant 'perNodeParallelOperations' value,
            you may need to increase pools sizes.
        -->
        <!--
        <property name="executorService">
            <bean class="org.gridgain.grid.thread.GridThreadPoolExecutor">
                <constructor-arg type="int" value="200"/>
                <constructor-arg type="int" value="200"/>
                <constructor-arg type="long">
                    <util:constant static-field="java.lang.Long.MAX_VALUE"/>
                </constructor-arg>
                <constructor-arg type="java.util.concurrent.BlockingQueue">
                    <bean class="java.util.concurrent.LinkedBlockingQueue"/>
                </constructor-arg>
            </bean>
        </property>

        <property name="systemExecutorService">
            <bean class="org.gridgain.grid.thread.GridThreadPoolExecutor">
                <constructor-arg type="int" value="200"/>
                <constructor-arg type="int" value="200"/>
                <constructor-arg type="long">
                    <util:constant static-field="java.lang.Long.MAX_VALUE"/>
                </constructor-arg>
                <constructor-arg type="java.util.concurrent.BlockingQueue">
                    <bean class="java.util.concurrent.LinkedBlockingQueue"/>
                </constructor-arg>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide TCP discovery SPI (Amazon EC2).
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.s3.GridTcpDiscoveryS3IpFinder">
                        <property name="awsCredentials">
                            <bean class="com.amazonaws.auth.BasicAWSCredentials">
                                <constructor-arg value="YOUR_ACCESS_KEY_ID" />
                                <constructor-arg value="YOUR_SECRET_ACCESS_KEY" />
                            </bean>
                        </property>
                        <property name="bucketName" value="YOUR_BUCKET_NAME_IP_FINDER"/>
                    </bean>
                </property>
                <property name="heartbeatFrequency" value="2000"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide TCP discovery SPI (Local network).

            If path to shared file system is not explicitly provided,
            then only local nodes will be able to discover each other.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.sharedfs.GridTcpDiscoverySharedFsIpFinder">
                        <property name="path" value="work/disco/tcp"/>
                    </bean>
                </property>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide TCP discovery SPI (predefined addresses).
            Use the addresses list to provide IP addresses of initial nodes in the grid
            (at least one address must be provided).
        -->
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.vm.GridTcpDiscoveryVmIpFinder">
                        <property name="addresses">
                            <list>
                                <!--
                                    List all IP/port configurations that potentially
                                    can be started first in examples. We are assuming
                                    grid of size 10 or less.
                                -->
                                <value>127.0.0.1:47500</value>
                                <value>127.0.0.1:47501</value>
                                <value>127.0.0.1:47502</value>
                                <value>127.0.0.1:47503</value>
                                <value>127.0.0.1:47504</value>
                                <value>127.0.0.1:47505</value>
                                <value>127.0.0.1:47506</value>
                                <value>127.0.0.1:47507</value>
                                <value>127.0.0.1:47508</value>
                                <value>127.0.0.1:47509</value>
                            </list>
                        </property>
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
</beans>
